# External Dependencies:
# - cert-manager v1.11.0: Automated TLS certificate management
# - ingress-nginx v4.7.0: NGINX Ingress Controller

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: default
  labels:
    app: contract-processing-system
    component: backend
    environment: production
  annotations:
    # Ingress Controller Configuration
    kubernetes.io/ingress.class: "nginx"
    
    # TLS/Certificate Management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256"
    
    # Request Handling Configuration
    nginx.ingress.kubernetes.io/proxy-body-size: "25m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    
    # CORS Configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://contract-processing-system.com"
    
    # Security Configuration
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/limit-rps: "1000"
    
    # Monitoring Configuration
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"

spec:
  # TLS Configuration
  tls:
    - hosts:
        - api.contract-processing-system.com
      secretName: backend-tls-cert
  
  # Routing Rules
  rules:
    - host: api.contract-processing-system.com
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 80